{"version":3,"sources":["components/styles/Card.module.css","components/styles/Hand.module.css","components/Card.tsx","components/Hand.tsx","components/App.tsx","index.tsx"],"names":["module","exports","Card","value","suit","hidden","className","styles","hiddenCard","card","black","red","Hand","title","cards","handContainer","cardContainer","map","index","key","App","data","JSON","parse","stringify","jsonData","useState","deck","setDeck","userCards","setUserCards","userScore","setUserScore","userTurn","setUserTurn","dealerCards","setDealerCards","dealerScore","setDealerScore","dealerTurn","setDealerTurn","init","setInit","useEffect","drawCard","calculate","stand","bust","player","length","randomIndex","Math","floor","random","splice","console","log","dealCard","alert","push","setScore","total","forEach","Number","aces","filter","onClick","disabled","clear","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3bb89588.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__tKJf7\",\"hiddenCard\":\"Card_hiddenCard__3HJye\",\"black\":\"Card_black__3wE7w\",\"red\":\"Card_red__U3k4T\",\"value\":\"Card_value__2_TCt\",\"suit\":\"Card_suit__1PgAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"handContainer\":\"Hand_handContainer__1mkLE\",\"cardContainer\":\"Hand_cardContainer__1PoGg\"};","import React from 'react';\r\nimport styles from './styles/Card.module.css';\r\n\r\ntype CardProps = {\r\n  value: string;\r\n  suit: string;\r\n  hidden: boolean;\r\n};\r\n\r\nconst Card: React.FC<CardProps> = ({ value, suit, hidden }) => {\r\n  const getColor = () => {\r\n    if (suit === '♠' || suit === '♣') {\r\n      return styles.black;\r\n    }\r\n    else {\r\n      return styles.red;\r\n    }\r\n  }\r\n\r\n  const getCard = () => {\r\n    if (hidden) {\r\n      return (\r\n        <div className={styles.hiddenCard} />\r\n      );\r\n    }\r\n    else {\r\n      return (\r\n        <div className={styles.card}>\r\n          <div className={getColor()}>\r\n            <h1 className={styles.value}>{value}</h1>\r\n            <h1 className={styles.suit}>{suit}</h1>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {getCard()}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport styles from './styles/Hand.module.css';\r\nimport Card from './Card';\r\n\r\ntype HandProps = {\r\n  title: string,\r\n  cards: any[]\r\n};\r\n\r\nconst Hand: React.FC<HandProps> = ({ title, cards }) => {\r\n  return (\r\n    <div className={styles.handContainer}>\r\n      <h1>{title}</h1>\r\n      <div className={styles.cardContainer}>\r\n        {cards.map((card: any, index: number) => {\r\n          return (\r\n            <Card key={index} value={card.value} suit={card.suit} hidden={card.hidden} />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hand;","import React, { useState, useEffect } from 'react';\r\nimport Hand from './Hand';\r\nimport jsonData from '../deck.json';\r\n\r\nconst App: React.FC = () => {\r\n  const data = JSON.parse(JSON.stringify(jsonData.cards))\r\n  const [deck, setDeck]: any[] = useState(data);\r\n\r\n  const [userCards, setUserCards]: any[] = useState([]);\r\n  const [userScore, setUserScore] = useState(0);\r\n  const [userTurn, setUserTurn] = useState(true);\r\n\r\n  const [dealerCards, setDealerCards]: any[] = useState([]);\r\n  const [dealerScore, setDealerScore] = useState(0);\r\n  const [dealerTurn, setDealerTurn] = useState(false);\r\n\r\n  const [init, setInit] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (init) {\r\n      drawCard('user');\r\n      drawCard('dealer-hidden');\r\n      drawCard('user');\r\n      drawCard('dealer');\r\n      setInit(false);\r\n    }\r\n  }, [init]);\r\n\r\n  useEffect(() => {\r\n    calculate(userCards, setUserScore);\r\n  }, [userCards]);\r\n\r\n  useEffect(() => {\r\n    calculate(dealerCards, setDealerScore);\r\n  }, [dealerCards]);\r\n\r\n  useEffect(() => {\r\n    if (userScore === 21) {\r\n      stand();\r\n    }\r\n    else if (userScore > 21) {\r\n      bust();\r\n    }\r\n  }, [userScore]);\r\n\r\n  useEffect(() => {\r\n    if (dealerScore >= 17) {\r\n      setDealerTurn(false);\r\n    }\r\n    else if (dealerTurn) {\r\n      drawCard('dealer');\r\n    }\r\n  }, [dealerScore]);\r\n\r\n  const resetGame = () => {\r\n    console.clear();\r\n    setDeck(data);\r\n    setUserCards([]);\r\n    setDealerCards([]);\r\n    setUserTurn(true);\r\n    setInit(true);\r\n  }\r\n\r\n  const drawCard = (player: string) => {\r\n    if (deck.length > 0) {\r\n      const randomIndex = Math.floor(Math.random() * deck.length);\r\n      const card = deck[randomIndex];\r\n      deck.splice(randomIndex, 1);\r\n      setDeck([...deck]);\r\n      console.log('Remaining Cards:', deck.length);\r\n      switch (card.suit) {\r\n        case 'spades':\r\n          dealCard(player, card.value, '♠');\r\n          break;\r\n        case 'diamonds':\r\n          dealCard(player, card.value, '♦');\r\n          break;\r\n        case 'clubs':\r\n          dealCard(player, card.value, '♣');\r\n          break;\r\n        case 'hearts':\r\n          dealCard(player, card.value, '♥');\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    else {\r\n      alert('All cards have been drawn');\r\n    }\r\n  }\r\n\r\n  const dealCard = (player: string, value: string, suit: string) => {\r\n    switch (player) {\r\n      case 'user':\r\n        userCards.push({ 'value': value, 'suit': suit, 'hidden': false });\r\n        setUserCards([...userCards]);\r\n        break;\r\n      case 'dealer':\r\n        dealerCards.push({ 'value': value, 'suit': suit, 'hidden': false });\r\n        setDealerCards([...dealerCards]);\r\n        break;\r\n      case 'dealer-hidden':\r\n        dealerCards.push({ 'value': value, 'suit': suit, 'hidden': true });\r\n        setDealerCards([...dealerCards]);\r\n        break;\r\n      case 'test-ace':\r\n        userCards.push({ 'value': 'A', 'suit': '♠', 'hidden': false });\r\n        setUserCards([...userCards]);\r\n        break;\r\n      case 'test-king':\r\n        userCards.push({ 'value': 'K', 'suit': '♠', 'hidden': false });\r\n        setUserCards([...userCards]);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  const revealCard = () => {\r\n    dealerCards.filter((card: any) => {\r\n      if (card.hidden === true) {\r\n        card.hidden = false;\r\n      }\r\n      return card;\r\n    });\r\n    setDealerCards([...dealerCards])\r\n  }\r\n\r\n  const calculate = (cards: any[], setScore: any) => {\r\n    let total = 0;\r\n    cards.forEach((card: any) => {\r\n      if (card.hidden === false && card.value !== 'A') {\r\n        switch (card.value) {\r\n          case 'K':\r\n            total += 10;\r\n            break;\r\n          case 'Q':\r\n            total += 10;\r\n            break;\r\n          case 'J':\r\n            total += 10;\r\n            break;\r\n          default:\r\n            total += Number(card.value);\r\n            break;\r\n        }\r\n      }\r\n    });\r\n    const aces = cards.filter((card: any) => {\r\n      return card.value === 'A';\r\n    });\r\n    aces.forEach((card: any) => {\r\n      if (card.hidden === false) {\r\n        if ((total + 11) > 21) {\r\n          total += 1;\r\n        }\r\n        else if ((total + 11) === 21) {\r\n          if (aces.length > 1) {\r\n            total += 1\r\n          }\r\n          else {\r\n            total += 11\r\n          }\r\n        }\r\n        else {\r\n          total += 11;\r\n        }\r\n      }\r\n    });\r\n    setScore(total);\r\n  }\r\n\r\n  const hit = () => {\r\n    drawCard('user');\r\n  }\r\n\r\n  const stand = () => {\r\n    setUserTurn(false);\r\n    revealCard();\r\n    setDealerTurn(true);\r\n  }\r\n\r\n  const bust = () => {\r\n    setUserTurn(false);\r\n    alert('Bust!');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <button onClick={() => hit()} disabled={!userTurn}>Hit</button>\r\n      <button onClick={() => stand()} disabled={!userTurn}>Stand</button>\r\n      <button onClick={() => resetGame()}>Reset</button>\r\n      <Hand title={`Your Hand (${userScore})`} cards={userCards} />\r\n      <Hand title={`Dealer's Hand (${dealerScore})`} cards={dealerCards} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}